parameters:
  - name: action
    type: string
  - name: environment
    type: string

jobs:
  - job: TerragruntJob
    displayName: "Terragrunt ${{ parameters.action }} (${{ parameters.environment }})"
    pool:
      name: aws_host
    steps:
      - checkout: self

      # Check if terragrunt is installed, install if missing
      - script: |
          if ! command -v terragrunt &> /dev/null; then
            echo "terragrunt not found, installing..."
            curl -L -o terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.59.1/terragrunt_linux_amd64
            chmod +x terragrunt
            sudo mv terragrunt /usr/local/bin/
          else
            echo "terragrunt already installed."
            terragrunt --version
          fi
        displayName: "Ensure terragrunt is installed"

      - ${{ if eq(parameters.action, 'fmt') }}:
          - script: |
              cd terragrunt/${{ parameters.environment }}
              terragrunt hclfmt --check
            displayName: "Terragrunt Format Check"

      - ${{ if eq(parameters.action, 'plan') }}:
          - script: |
              cd terragrunt/${{ parameters.environment }}
              terragrunt plan-all
            displayName: "Terragrunt Plan-All"

      - ${{ if eq(parameters.action, 'apply') }}:
          - script: |
              cd terragrunt/${{ parameters.environment }}
              terragrunt apply-all -auto-approve
            displayName: "Terragrunt Apply-All"
            condition: eq(variables['Build.Reason'], 'Manual')
